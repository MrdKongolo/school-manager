<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>41</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAQEAAAAAACAAoFgAAFgAAACgAAABAAAAAgAAAAAEACAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAD///8AQcJ/ACRjBwDn5+cA4eDgAOvr6gDk5OMA3dzdAEPIhQAocB8A7u7tADS/eACc3LkAzMzMABFc
        AAAjXQAAhaN+ADvBfAApvXQALH80AABWAACenp0AN6RfAMXFxQCYmJcAAFEAALKysQCQkI8AvLy8ABxf
        AACsrKsA09PTAOj37wA8s28A0O7dAPT79wBxzpsAgtSnAFnJjgA6rGcAkqyKAGrNmACvw6kAyOvYACp4
        LAA2cCEAt+XLAKngwQDd5doAxtPCANvy5QCM1q0AM5ZPAKS1mgA9cTAAU5xhAFB9QgBskGcAhYWEADCN
        RQBJvXwAMrJpAANhAACTy6MAG4o/AGqzfAAASAAAGnUjAD2LRABZgVMAgsOYAJG5kwBJrm0AacKIAAB+
        JgCnzq4Aw93GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFRgVHhocBwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwVBwcHBwcfDR4cAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoHFx4HBwcHBwcHHxce
        HwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcBwcaGgcHBwcH
        BwcHBxceBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOgcHBx4c
        BwcHBwcHBwcHBx4cIwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIxoE
        BAQfFQ0EBAQEBAQEBAQEHBwjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACMfBAQEBA0VBwQEBAQEBAQEBAQcHCMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAKBgQEBAQEHB4HBAQEBAQEBAQEBB4NAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABwMEBAQEBAQcHgQEBAQEBAQEBAQHGxcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAABAQEBAQEBCyMAAAAAAAAAAAAAAAAAAAoXHAAKAgICCQEBAQEBAg4AAAAAACALAQEBASwOCgAAAAAh
        DygAAAAAAQEBAQEBAQsjAAAAAAAAAAAAAAAAAAAAAx4AAAICAgkBAQEBEQIOAAAAAAAgCwEBAQETDgoA
        AAAAPA8oAAAAAAEBAQEBAQELIwAAAAAAAAAAAAAAAAAAAAAHHwACAgIJAQEBAREPCQAAAAAAMgsBAQEB
        Ew4FAAAAADwPKAAAAAABAQEBAQEBCyMAAAAAAAAAAAAAAAAAAAAAAAMAAgICCQEBAQERDzYAAAAAADIL
        AQEBARMOBQAAAAAmDygAAAAAAQEBAQEBAQsjAAAAAAAAAAAAAAAAAAAAAAAAAAICAgkBAQEBEQ82AAAA
        AAAgCwEBAQETDgUAAAAAPA8oAAAAAAEBAQEBAQELIwAAAAAAAAAAAAAAAAAAAAAAAAACAgIJAQEBAREP
        AgAAAAAAIAsBAQEBExQKAAAAABEPKAAAAAABAQEBAQEBCyMAAAAAAAAAAAAAAAAAAAAAAAAAAgICCQEB
        AQERAg4AAAAAACALAQEBASwOIwAAAAAhDygAAAAAAQEBAQEBAQsjAAAAAAAAAAAAAAAAAAAAAAAAAAIC
        AgkBAQEBAQkOAAAAAAAjCwEBAQEJHSMAAAAjPS0oAAAAAEYzMwgBAQELIwAAAAAAAAAAAAAAAAAAAAAA
        AAACAgIJAQEBAQEsDgAAAAAAIxEBAQEBAgkjAAAABgkjAAAAAAAAAAAmAQEBCyMAAAAAAAAAAAAAAAAA
        AAAAAAAAAgICCQEBAQEBNB0jAAAAAAAmAQEBAQI4AAAAADEJAAAAAAAAAAAAJgEBAQsjAAAAAAAAAAAA
        AAAAAAAAAAAAAAICAgkBAQEBAScCCgAAAAAAJAEBAQECKAAAAABHLQAAAAAAACMgICYBAQELIwAAAAAA
        AAAAAAAAAAAAAAAAAAACAgIJAQEBAQEBDxAAAAAAAAwBAQEhAh8AAAAASBYQRQAAAAALCwsBAQEBCyMA
        AAAAAAAAAAAAAAAAAAAAAAAAAgICCQEBAQEBAQIUIwAAAAAyCwEBAhQjAAAAIAsBFgIAAAAAAQEBAQEB
        AQsjAAAAAAAAAAAAAAAAAAAAAAAAAAICAgkBAQEBAQEhAjAAAAAAAC8RFhQDAAAAADMBASECMAAAAAEB
        AQEBAQELIwAAAAAAAAAAAAAAAAAAAAAAAAACAgIJAQEBAQEBAQItIwAAAAAAMjEKAAAAADIBAQEBDxAA
        AAABAQEBAQEBCyMAAAAAAAAAAAAAAAAAAAAAAAAAAgICCQEBAQEBAQEhHUcAAAAAAAAAAAAAACMmAQEB
        AQkOAAAAAQEBAQEBAQsjAAAAAAAAAAAAAAAAAAAAAAAAAAICAgkBAQEBAQEBARYONQAAAAAAAAAAADIm
        AQEBAQEnQDMlKQEBAQEBAQELIwAAAAAAAAAAAAAAAAAAAAAAAAACAgIJAQEBAQEBAQEBEUM5HyMAAAAA
        MjMRAQEBAQEBAQEBAQEBAQEBAQEBCyMAAAAAAAAAAAAAAAAAAAAAAAAAAgICCQEBAQEBAQEBAQEBASEh
        SSQmAQsBAQEBAQEBAQEBAQEBAQEBAQEBAQsjAAAAAAAAAAAAAAAAAAAAAAAAAAICAgkBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQELIwAAAAAAAAAAAAAAAAAAAAAAAAACAgIJAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBCyMAAAAAAAAAAAAAAAAAAAAAAAAALQICCQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQsjAAAAAAAAAAAAAAAAAAAAAAAAAEUC
        AgIBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQELESYlIwAAAAAAAAAAAAAAAAAAAAAA
        AAAxAgIPEQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEREREmJS8rMiMAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAB0CAjQBAQEBAQEBAQEBAQEBAQEBAQEBAQEBEQsRJiUMLjIjAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAA1AgICEQEBAQEBAQEBAQEBAQEBERERCCYkDC4gAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAACgCAiwRAQEBAQEBARERAQgmJAwrIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABUUJCSEBAQEBCCYMKyMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>